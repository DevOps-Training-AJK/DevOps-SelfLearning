pipeline {
    agent any
    environment {
        username = "ajithkv98@gmail.com"
        password = credentials('docker')
        region = ap-south-1
        name = simplejs-deploy-practice

    }
    stages {
        stage('checkout-repo') {
            steps {
                script {
                    sh '''
                        if [ -d "Test-Frontend-app-Calculator" ]; then
                            rm -rf 'Test-Frontend-app-Calculator'
                        fi
                        git clone https://github.com/DevOps-Training-AJK/Test-Frontend-app-Calculator.git
                        cd 'Test-Frontend-app-Calculator'
                        git checkout master
                    '''
                }
            }
        }
        stage('docker-build') {
            steps {
                script {
                    sh """
                        docker --version
                        cd 'Test-Frontend-app-Calculator'
                        docker login -u "${username}" -p "${password_PSW}"
                        docker build . -t ajithdevops/test:${BUILD_NUMBER}
                        docker push ajithdevops/test:${BUILD_NUMBER}
                    """
                }
            }
        }
        stage('Deploy') {
            environment {
                KUBE_USER = credentials('kubeuser')
                KUBE_PASS = credentials('kubepass')
            }
            steps {
                script {
                    withAWS(credentials: '982081059131') {
                    sh '''
                        aws sts get-caller-identity
                        aws eks --region ${region} update-kubeconfig --name ${name}
                        kubectl get node
                        #kubectl create ns simplejs-practice
                        kubectl create deployment simplejs-deploy-practice-${BUILD_NUMBER} --image=ajithdevops/test:${BUILD_NUMBER} -n simplejs-practice
                        kubectl expose deployment simplejs-deploy-practice-${BUILD_NUMBER} --type=LoadBalancer --port=80 -n simplejs-practice
                        sleep 100
                        kubectl get all -n simplejs-practice
                    '''
                    }
                }
            }
        }
    }
}
